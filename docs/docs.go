// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/todos": {
            "get": {
                "description": "Get detail of all todo task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Get all of todo task",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todo.Formatter"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create todo task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Create new todo task",
                "parameters": [
                    {
                        "description": "param to create todo",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todo.TodoInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todo.Formatter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Response"
                            }
                        }
                    }
                }
            }
        },
        "/todos/:id": {
            "get": {
                "description": "Get detail todo task by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Get todo by id",
                "parameters": [
                    {
                        "description": "id todo task",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todo.Formatter"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error, When id not in record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Response"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "update doto by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Update todo by id",
                "parameters": [
                    {
                        "description": "param to update todo task",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todo.TodoUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todo.Formatter"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error, When id not in record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Response"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "delete todo by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Delete todo by id",
                "parameters": [
                    {
                        "description": "id todo task",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success, When id in record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error, When id not in record",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Response"
                            }
                        }
                    }
                }
            }
        },
        "/user/person/login": {
            "post": {
                "description": "Create todo task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Create new todo task",
                "parameters": [
                    {
                        "description": "param to create todo",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/todo.TodoInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todo.Formatter"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/helper.Response"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helper.Response": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                },
                "payload": {},
                "status": {
                    "type": "integer"
                }
            }
        },
        "todo.Formatter": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean",
                    "example": false
                },
                "created_at": {
                    "type": "string",
                    "example": "2022-10-25T17:50:24.701221716+07:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "task": {
                    "type": "string",
                    "example": "push up 1 sets"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-10-25T17:50:24.701221716+07:00"
                }
            }
        },
        "todo.TodoInput": {
            "type": "object",
            "required": [
                "task"
            ],
            "properties": {
                "task": {
                    "type": "string",
                    "example": "push up 1 sets"
                }
            }
        },
        "todo.TodoUpdateInput": {
            "type": "object",
            "required": [
                "completed",
                "task"
            ],
            "properties": {
                "completed": {
                    "type": "boolean",
                    "example": true
                },
                "task": {
                    "type": "string",
                    "example": "push up 1 sets"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
