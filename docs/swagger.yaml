definitions:
  helper.Response:
    properties:
      error: {}
      message:
        type: string
      payload: {}
      status:
        type: integer
    type: object
  todo.Formatter:
    properties:
      completed:
        example: false
        type: boolean
      created_at:
        example: "2022-10-25T17:50:24.701221716+07:00"
        type: string
      id:
        example: 1
        type: integer
      task:
        example: push up 1 sets
        type: string
      updated_at:
        example: "2022-10-25T17:50:24.701221716+07:00"
        type: string
    type: object
  todo.TodoInput:
    properties:
      task:
        example: push up 1 sets
        type: string
    required:
    - task
    type: object
  todo.TodoUpdateInput:
    properties:
      completed:
        example: true
        type: boolean
      task:
        example: push up 1 sets
        type: string
    required:
    - completed
    - task
    type: object
info:
  contact: {}
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: Get detail of all todo task
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.Formatter'
            type: array
      summary: Get all of todo task
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create todo task
      parameters:
      - description: param to create todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/todo.TodoInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.Formatter'
            type: array
        "400":
          description: Bad Request
          schema:
            items:
              $ref: '#/definitions/helper.Response'
            type: array
      summary: Create new todo task
      tags:
      - todos
  /todos/:id:
    delete:
      consumes:
      - application/json
      description: delete todo by id
      parameters:
      - description: id todo task
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success, When id in record
          schema:
            items:
              $ref: '#/definitions/helper.Response'
            type: array
        "500":
          description: Internal server error, When id not in record
          schema:
            items:
              $ref: '#/definitions/helper.Response'
            type: array
      summary: Delete todo by id
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Get detail todo task by id
      parameters:
      - description: id todo task
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.Formatter'
            type: array
        "500":
          description: Internal server error, When id not in record
          schema:
            items:
              $ref: '#/definitions/helper.Response'
            type: array
      summary: Get todo by id
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: update doto by id
      parameters:
      - description: param to update todo task
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/todo.TodoUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.Formatter'
            type: array
        "500":
          description: Internal server error, When id not in record
          schema:
            items:
              $ref: '#/definitions/helper.Response'
            type: array
      summary: Update todo by id
      tags:
      - todos
  /user/person/login:
    post:
      consumes:
      - application/json
      description: Create todo task
      parameters:
      - description: param to create todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/todo.TodoInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.Formatter'
            type: array
        "400":
          description: Bad Request
          schema:
            items:
              $ref: '#/definitions/helper.Response'
            type: array
      summary: Create new todo task
      tags:
      - todos
swagger: "2.0"
